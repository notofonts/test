name: Build font and specimen

on:
  push:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: actions/cache@v2
      with:
        path: ./venv/
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-
    - name: Do first-run script if necessary
      run: make .init.stamp
      if: github.repository != 'googlefonts/Unified-Font-Repository'
    - uses: stefanzweifel/git-auto-commit-action@v4
      name: First-run setup
      if: github.repository != 'googlefonts/Unified-Font-Repository'
      with:
        file_pattern: .init.stamp README.md requirements.txt OFL.txt
        commit_message: "Personalize for this repo"
    - name: gen zip file name
      id: zip-name
      shell: bash
      # Set the archive name to repo name + "-assets" e.g "MavenPro-assets"
      run: echo "ZIP_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')-fonts" >> $GITHUB_ENV
    - name: Build font
      run: make build
    - name: Check with fontbakery
      run: make test
      continue-on-error: true
    - name: proof
      run: make proof
    - name: setup site
      run: . venv/bin/activate; python3 scripts/template.py
    - name: Copy fonts to gh-pages dir
      run: cp -r fonts out
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./out
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ZIP_NAME }}
        path: |
          fonts
          out
    outputs:
      zip_name: ${{ env.ZIP_NAME }}
